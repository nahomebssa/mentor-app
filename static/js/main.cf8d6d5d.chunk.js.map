{"version":3,"sources":["utils.js","controllers/FirebaseManager.js","controllers/AuthenticationManager.js","views/HomeView.js","controllers/SearchManager.js","views/ExploreView.js","views/InboxView.js","views/ProfileView.js","views/AuthenticationView.js","App.js","index.js"],"names":["fakedb","users","FIELDS","i","push","username","name","email","bio","areaOfExpertise","maxLen","Math","floor","random","arr","length","rating","ALERT","DBG","ERR","ENUM","obj","Object","freeze","FirebaseManager","AuthResult","result","error","this","password","res","FNID","isAuthResult","firebase","auth","signInWithEmailAndPassword","then","catch","code","message","provider","GoogleAuthProvider","signInWithPopup","credential","accessToken","user","onAuthStateChanged","displayName","emailVerified","photoURL","isAnonymous","uid","providerData","_initialize","AuthenticationManager","includes","state","_authState","AuthState","SIGNEDIN","onSuccess","onFail","SIGNEDOUT","GUESTMODE","AuthProvider","EMAIL","GOOGLE","HomeView","to","className","Card","style","width","Body","Title","Text","Button","href","variant","Component","SearchManager","query","sortBy","callback","firestore","collection","where","get","console","snap","doc","exists","log","data","alert","err","SearchQuery","SearchResult","SearchBox","onTextChange","useState","value","setValue","type","onChange","event","target","autoFocus","fontFamily","Rating","n","iconName","Array","keys","map","x","key","UserCard","tags","Img","src","minHeight","background","as","rest","t","Badge","SearchResults","results","r","ExploreView","searchText","setSearchText","DB","searchResults","text","onClick","searchFor","InboxView","height","PageTitle","props","ProfileView","profile","isEmptyProfile","iName","iUsername","iBio","iEmail","saveChanges","bind","onProfileRefGet","onProfileRefGetError","getProfile","loadProfile","currentUser","updateProfile","profileRef","newProfile","set","onProfileUpdated","setState","forceUpdate","signedIn","MProfileForm","MLabel","Left","children","placeholder","id","SignInForm","errorMessage","gotSignedIn","REDIRECT_URL","onSignInFail","onSignInSuccess","handleSignIn","history","successPath","setAuthState","signIn","hasError","React","SignUpForm","fullName","gotSignedUp","onSignUpSuccess","onSignUpFail","isSetup","createUserWithEmailAndPassword","Form","Group","Control","display","flex","handleSignUp","SignOutForm","AuthenticationView","authMode","AppTabs","createContext","tabs","Icon","icon","size","AppSwitch","path","AppLayout","Octicons","AppHeader","AppMain","App","basename","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","render","document","getElementById"],"mappings":"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","file":"static/js/main.cf8d6d5d.chunk.js","sourcesContent":["export function $(selector) {\r\n\treturn document.querySelector(selector)\r\n}\r\nexport function $$(selector) {\r\n\treturn document.querySelectorAll(selector)\r\n}\r\nexport function range(n) {\r\n    return [...Array(n).keys()]\r\n}\r\nexport function assert(expression = true, failMsg = \"\") {\r\n\tclass AssertionError extends Error { constructor(msg) { super(msg) } }\r\n\tif (!expression)\r\n\t\tthrow new AssertionError(`${failMsg}`)\r\n}\r\nexport const fakedb = {\r\n    users: []\r\n}\r\n\r\nconst FIELDS = [\r\n    \"IT & Computer Science\",\r\n    \"Biology\",\r\n    \"Physics\",\r\n    \"Accounting\",\r\n    \"Health & Medicine\",\r\n    \"Educator\"\r\n]\r\n\r\n\r\nfor (let i = 1; i < 20; i++) {\r\n    fakedb.users.push({\r\n        username: `@user${i}`,\r\n        name: `User ${i}`,\r\n        email: `user${i}`,\r\n        bio: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Commodi corporis quam, unde voluptate labore repellendus nisi facilis veniam. Laboriosam nulla fuga officia quidem sint qui odio amet pariatur quod corporis.\",\r\n        areaOfExpertise: (() => {\r\n            let maxLen = Math.floor(Math.random() * 3)\r\n            const index = () => Math.floor(Math.random() * FIELDS.length)\r\n            const arr = []\r\n            while (maxLen-- > 0) {\r\n                arr.push(FIELDS[index()])\r\n            }\r\n            return arr;\r\n        })(),\r\n        rating: Math.floor(Math.random() * 5),\r\n    })\r\n}\r\n\r\n\r\nconst ENUM = obj => Object.freeze(obj)\r\n\r\nconst __DEBUG__ = false;\r\nlet ALERT, DBG, ERR;\r\nif (__DEBUG__)\r\n{\r\n    ALERT = alert\r\n\tDBG = console.log\r\n\tERR = console.error\r\n}\r\nelse\r\n{\r\n    ALERT = () => {}\r\n\tDBG = () => {}\r\n\tERR = () => {}\r\n}\r\n\r\nexport { ALERT, DBG, ERR, ENUM }","import firebase from 'firebase'\r\nimport { ALERT, ERR, DBG } from '../utils'\r\n\r\n\r\nexport class FirebaseManager {\r\n\tstatic _initialize()\r\n\t{\r\n\t\tFirebaseManager.AuthResult = class {\r\n\t\t\tconstructor({ result, error, }) {\r\n\t\t\t\tthis.result = result;\r\n\t\t\t\tthis.error = error;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tstatic signInWithEmailAndPassword(email, password)\r\n\t{\t\r\n\t\tconst FNID = \"[FirebaseManager#signInWithEmailAndPassword]\\n\";\r\n\t\tconst TAB = \"    \"\r\n\t\tlet res;\r\n\t\t\r\n\t\tconst result = firebase.auth().signInWithEmailAndPassword(email, password)\r\n\t\t.then(function(result) {\r\n\t\t\tDBG(\"signInWithEmailAndPassword, HERE\")\r\n\t\t\tres = new FirebaseManager.AuthResult({ result: result, error: null });\r\n\t\t\tALERT(`${FNID}Signed in user:\\n${result}`)\r\n\t\t\tDBG(result)\r\n\t\t}).catch(function(error) {\r\n\t\t\tres = new FirebaseManager.AuthResult({ result: null, error });\r\n\t\t\tALERT(`${FNID}Error: couldn't sign in user\\n${TAB}fberr: \"${error}\"`)\r\n\t\t\tERR(FNID, error)\r\n\t\t\t// Handle Errors here.\r\n\t\t\tvar errorCode = error.code;\r\n\t\t\tvar errorMessage = error.message;\r\n\t\t\t// ...\r\n\t\t});\r\n\t\t\r\n\t\tconst isAuthResult = res instanceof FirebaseManager.AuthResult\r\n\t\tALERT(`${FNID}res: ${res}\\n${ isAuthResult ? \"\" : \"not\"} instanceof FirebaseManager.AuthResult`)\r\n\t\treturn res;\r\n\t}\r\n\t\r\n\t// signInWithPopup(provider)\r\n\tstatic signInWithGoogle()\r\n\t{\r\n\t\tvar provider = new firebase.auth.GoogleAuthProvider();\r\n\t\tfirebase.auth().signInWithPopup(provider).then(function(result) {\r\n\t\t\t// This gives you a Google Access Token. You can use it to access the Google API.\r\n\t\t\tvar token = result.credential.accessToken;\r\n\t\t\t// The signed-in user info.\r\n\t\t\tvar user = result.user;\r\n\t\t\t// ...\r\n\t\t}).catch(function(error) {\r\n\t\t\t// Handle Errors here.\r\n\t\t\tvar errorCode = error.code;\r\n\t\t\tvar errorMessage = error.message;\r\n\t\t\t// The email of the user's account used.\r\n\t\t\tvar email = error.email;\r\n\t\t\t// The firebase.auth.AuthCredential type that was used.\r\n\t\t\tvar credential = error.credential;\r\n\t\t\t// ...\r\n\t\t});\r\n\t}\r\n\t\r\n\tstatic onAuthStateChanged()\r\n\t{\r\n\t\tfirebase.auth().onAuthStateChanged(function(user) {\r\n\t\t\tif (user) {\r\n\t\t\t\t// User is signed in.\r\n\t\t\t\tvar displayName = user.displayName;\r\n\t\t\t\tvar email = user.email;\r\n\t\t\t\tvar emailVerified = user.emailVerified;\r\n\t\t\t\tvar photoURL = user.photoURL;\r\n\t\t\t\tvar isAnonymous = user.isAnonymous;\r\n\t\t\t\tvar uid = user.uid;\r\n\t\t\t\tvar providerData = user.providerData;\r\n\t\t\t\t// ...\r\n\t\t\t} else {\r\n\t\t\t\t// User is signed out.\r\n\t\t\t\t// ...\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\nFirebaseManager._initialize();","import firebase from 'firebase'\r\nimport { FirebaseManager } from './FirebaseManager'\r\nimport { ALERT, ERR, ENUM, DBG } from '../utils'\r\n\r\nclass AuthenticationManager {\r\n\r\n    static AuthState = ENUM({\r\n        SIGNEDIN: \"AuthState.SIGNEDIN\",\r\n        SIGNEDOUT: \"AuthState.SIGNEDOUT\",\r\n        GUESTMODE: \"AuthState.GUESTMODE\",\r\n    })\r\n    static AuthProvider = ENUM({\r\n        EMAIL: \"AuthProvider.EMAIL\",\r\n        GOOGLE: \"AuthProvider.GOOGLE\",\r\n    })\r\n    static AuthResult = class {\r\n        // constructor({ status, message }) {\r\n        constructor({ result, error }) {\r\n            this.result = result;\r\n            this.error = error;\r\n        }\r\n    }\r\n\r\n    static _authState = AuthenticationManager.AuthState.SIGNEDOUT;\r\n\r\n\tstatic _checkEmailAndPassword(email, password)\r\n\t{\r\n\t\tif (email && password)\r\n\t\t{\r\n\t\t\tif (email.includes(\"@\") && email.includes(\".\"))\r\n\t\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tstatic setAuthState(state)\r\n\t{\r\n\t\tAuthenticationManager._authState = AuthenticationManager.AuthState.SIGNEDIN\r\n\t}\r\n\t\r\n\tstatic signIn({\r\n\t\tprovider = \"\",\r\n\t\temail = \"\",\r\n\t\tpassword = \"\",\r\n\t\tonSuccess = () => {},\r\n\t\tonFail = () => {},\r\n\t})\r\n\t{\r\n\t\tDBG(\"HERE\", onSuccess)\r\n\t\tfirebase.auth().signInWithEmailAndPassword(email, password)\r\n\t\t\t.then(onSuccess)\r\n\t\t\t.catch(onFail)\r\n\r\n\t\treturn;\r\n\t\tlet authRes;\r\n\t\tswitch (provider) {\r\n\t\t\tcase AuthenticationManager.AuthProvider.EMAIL:\r\n\t\t\t\t// if (!AuthenticationManager._checkEmailAndPassword(email, password))\r\n\t\t\t\t// {\r\n\t\t\t\t// \tthrow new Error(\"[AuthenticationManager#signIn] Invalid email or password, from _checkEmailAndPassword\")\r\n\t\t\t\t// }\r\n\t\t\t\t// const signInAuthResult = FirebaseManager.signInWithEmailAndPassword(email, password)\r\n\t\t\t\tconst { result, error } = FirebaseManager.signInWithEmailAndPassword(email, password)\r\n\t\t\t\tauthRes = new AuthenticationManager.AuthResult({ result, error });\r\n\t\t\t\tbreak;\r\n\t\t\tcase AuthenticationManager.AuthProvider.GOOGLE:\r\n\t\t\t\tFirebaseManager.signInWithGoogle();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tauthRes = new AuthenticationManager.AuthResult({ result: null, error: null });\r\n\t\t\t\tALERT(\"[AuthenticationManager#signIn] Error: No provider was specified.\")\r\n\t\t\t\tERR(\"[AuthenticationManager#signIn] Error: No provider was specified.\")\r\n\t\t\t\tALERT(`[AuthenticationManager#signIn] Provider: ${provider.constructor.name} ${provider}`)\r\n\t\t\t\tERR(`[AuthenticationManager#signIn] Provider: ${provider.constructor.name} ${provider}`)\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn authRes;\r\n\t}\r\n}\r\n\r\n\r\nexport {AuthenticationManager};","import React, { Component } from 'react'\r\nimport { AuthenticationManager } from '../controllers/AuthenticationManager'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport {\r\n    Button,\r\n    Card\r\n} from 'react-bootstrap'\r\n\r\nexport class HomeView extends Component {\r\n    render() {\r\n        const isSignedOut = (AuthenticationManager._authState == AuthenticationManager.AuthState.SIGNEDOUT)\r\n        if (isSignedOut) return <Redirect to=\"/sign-in\" />\r\n        return (\r\n            <div className=\"HomeView\">\r\n                <h1 className=\"title\">Home</h1>\r\n                <Card style={{ width: '18rem' }}>\r\n                    {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                    <Card.Body>\r\n                        <Card.Title>Card Title</Card.Title>\r\n                        <Card.Text>\r\n                            Some quick example text to build on the card title and make up the bulk of\r\n                            the card's content.\r\n                        </Card.Text>\r\n                        <Button href=\"/profile\" variant=\"primary\">Edit Profile</Button>\r\n                    </Card.Body>\r\n                </Card>\r\n                <Card style={{ width: '18rem' }}>\r\n                    {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                    <Card.Body>\r\n                        <Card.Title>Card Title</Card.Title>\r\n                        <Card.Text>\r\n                            Some quick example text to build on the card title and make up the bulk of\r\n                            the card's content.\r\n                        </Card.Text>\r\n                        <Button href=\"/explore\" variant=\"primary\">Search for a mentor</Button>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}","import firebase from 'firebase'\r\nimport {ERR, DBG} from '../utils'\r\n\r\nconst FSC_USERS = \"users\"\r\n\r\nexport class SearchManager {\r\n\r\n    static SearchQuery = class { }\r\n    static SearchResult = class { }\r\n\r\n    /**\r\n     * Class variables\r\n     * _results: []\r\n     */\r\n    constructor({ /* ... */ }) { }\r\n\r\n    /**\r\n     * \r\n     * @param {SearchManager.Query} query\r\n     * @param {SearchManager.SortType} sortBy\r\n     * @returns {SearchManager.Result} ...\r\n     */\r\n    static searchFor({ query, sortBy, callback }) {\r\n\r\n        const collectionFilter = ['', '', '']\r\n        const db = firebase.firestore()\r\n        db.collection('users').where(...collectionFilter).get().catch(console.error).then(snap => {\r\n            // snap.forEach(s => users.push(s))\r\n            // console.log('users', users)\r\n        })\r\n\r\n\r\n    }\r\n\r\n    static userExist({ name }) {\r\n        var db = firebase.firestore();\r\n        let update = db.collection('users').doc('Dunton James').get()\r\n            .then(doc => {\r\n                if (!doc.exists) {\r\n                    alert('No such document!');\r\n                    // response.send('No such document!');  // FIXME:\r\n                } else {\r\n                    console.log(name, 'Document data:', doc.data());\r\n                    // response.send(doc.data());  // FIXME: \r\n                }\r\n                return;\r\n            })\r\n            .catch(err => {\r\n                console.log('Error getting document', err);\r\n            });\r\n    }\r\n\r\n}","import React, { useState } from 'react'\r\nimport { SearchManager } from '../controllers/SearchManager'\r\nimport { Badge, Card } from 'react-bootstrap'\r\nimport { fakedb as DB, range } from '../utils'\r\n\r\nfunction SearchBox({ onTextChange }) {\r\n    const [value, setValue] = useState(\"\")\r\n    const onChange = (event) => {\r\n        setValue(event.target.value)\r\n        onTextChange(event.target.value);\r\n    }\r\n    return (\r\n        <div className=\"SearchBox flex fww fdc\">\r\n            <input type=\"text\" value={value} onChange={onChange} autoFocus />\r\n            <span style={{fontFamily:'monospace'}}>{value}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Rating = ({ value, iconName }) => {\r\n    const MAX_RATING = 5\r\n    return (\r\n        <div className=\"Rating flex\">\r\n            {\r\n                range(MAX_RATING).map((x, i) => {\r\n                    return <i key={i} className={`material-icons ${(i < value) ? \"--filled\" : \"--empty\"}`}>{iconName}</i>\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction UserCard({user}) {\r\n    const { name: displayName, bio, areaOfExpertise: tags, rating } = user\r\n    return (\r\n        <Card>\r\n            <Card.Img variant=\"top\" src=\"#\" style={{minHeight:'30vh', background: 'slategrey'}} />\r\n            <Card.Body>\r\n                <Card.Title as={({...rest}) => <h3 {...rest} />}>{displayName}</Card.Title>\r\n                <Card.Text>{bio}</Card.Text>\r\n                <Rating value={rating} />\r\n                {\r\n                    tags.map((t, i) => {\r\n                        return (\r\n                            <Badge variant=\"secondary\" className=\"p-2 mr-2\" key={i}>{t}</Badge>\r\n                        )\r\n                    })\r\n                }\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nfunction SearchResults({ results }) {\r\n    return (\r\n        <div className=\"SearchResults flex fdc\">\r\n            {results.map((r, i) => {\r\n                const result = { user: results[i] }\r\n                return <UserCard key={i} user={result.user} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function ExploreView() {\r\n    const [searchText, setSearchText] = useState(\"\")\r\n    const [searchResults, setSearchResults] = useState(DB.users || [])\r\n    const handleClick = () => {\r\n        // SearchManager.userExist({ name: searchText })\r\n        SearchManager.searchFor({ query: searchText })\r\n        console.log()\r\n    }\r\n    return (\r\n        <div className=\"ExploreView flex fdc\">\r\n            <SearchBox onTextChange={(text) => setSearchText(text)} />\r\n            <button onClick={handleClick}>\r\n                send data\r\n            </button>\r\n            <SearchResults results={searchResults} />\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react'\r\n\r\nexport class InboxView extends Component {\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div className=\"InboxView flex\" style={{height: '100%'}}>\r\n\t\t\t\t<div className=\"coming-soon flex-1 flex aic jcc\">\r\n\t\t\t\t\t<p>Coming soon...</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","import React, { Component } from 'react'\r\nimport firebase from 'firebase'\r\nimport { DBG, ALERT } from '../utils'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { GridBox } from '../components'\r\n\r\nconst PageTitle = (props) => (<h2 className=\"title\">Edit Profile</h2>)\r\n\r\nconst ProfilePicture = (props) => (<img src=\"#\" alt=\"Profile picture\" style={{ flex: \"1\" }} />)\r\n\r\nconst ProfileAttribute = (props) => (\r\n\t<div style={{ flex: \"4\", display: \"flex\", flexDirection: \"column\" }}>\r\n\t\t<p>{props.title || \"<untitled attribute>\"}</p>\r\n\t\t<input type={props.inputType || \"text\"}/>\r\n\t</div>\r\n)\r\n\r\n\r\n/* const ProfileForm = (props) => (\r\n\t<div className=\"profile-form\">\r\n\t\t<input type=\"text\" placeholder=\"Name\" />\r\n\t\t<textarea placeholder=\"Insert bio here...\" />\r\n\t\t<input className=\"btn\" type=\"submit\" value=\"Save changes\" />\r\n\t</div>\r\n) */\r\n\r\nclass ProfileForm1 extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tconst FNID = `[ProfileForm#constructor]`\r\n\t\tDBG(FNID, `props.profile: `, props.profile)\r\n\t\tthis.state = {\r\n\t\t\tname: props.profile.name || \"\",\r\n\t\t\tbio: props.profile.bio || \"\"\r\n\t\t}\r\n\t\tthis.saveChanges = this.saveChanges.bind(this)\r\n\t}\r\n\r\n\tsaveChanges() {\r\n\t\tconst FNID = `[ProfileForm#saveChanges]`\r\n\t\t// ALERT(`${FNID} SUCCESS \\n${result}`)\r\n\t\t// DBG(FNID, result)\r\n\r\n\t\tconst { name, bio } = this.state;\r\n\t\tALERT(`saving changes...\\nname: ${name}\\nbio: ${bio}`)\r\n\r\n\t\tconst user = firebase.auth().currentUser;\r\n\t\tuser.updateProfile({\r\n\t\t\tdisplayName: this.state.name,\r\n\t\t\t// photoURL: \"https://example.com/jane-q-user/profile.jpg\"\r\n\t\t}).then(function () {\r\n\t\t\t// Update successful.\r\n\t\t\tALERT(`${FNID} updated profile`)\r\n\t\t}).catch(function (error) {\r\n\t\t\t// An error happened.\r\n\t\t\tALERT(`${FNID} failed to update profile`)\r\n\t\t\tDBG(FNID, error)\r\n\t\t});\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"profile-form\">\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Name\"\r\n\t\t\t\t\tvalue={this.state.name}\r\n\t\t\t\t\tonChange={(event) => this.setState({ name: event.target.value })} />\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tplaceholder=\"Insert bio here...\"\r\n\t\t\t\t\tvalue={this.state.bio}\r\n\t\t\t\t\tonChange={(event) => this.setState({ bio: event.target.value })} />\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tclassName=\"btn\"\r\n\t\t\t\t\tonClick={(event) => { this.saveChanges() }}\r\n\t\t\t\t\tvalue=\"Save changes\" />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n}\r\n\r\nclass ProfileForm extends Component {\r\n\tconstructor(props) {\r\n        super(props)\r\n        const {profile} = props\r\n\t\tthis.state = {\r\n\t\t\tiName: profile.name || \"\",\r\n\t\t\tiUsername: profile.username || \"\",\r\n\t\t\tiBio: profile.bio || \"\",\r\n\t\t\tiEmail: profile.email || \"\",\r\n\t\t}\r\n\t\tthis.saveChanges = this.saveChanges.bind(this)\r\n\t}\r\n\trender()\r\n\t{\r\n\t\treturn (\r\n\t\t\t<div className=\"ProfileForm\">\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport class ProfileView extends Component {\r\n\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props)\r\n\t\tconst FNID = `[ProfileView#constructor]`\r\n\t\tDBG(FNID, `props.profile: `, this.props.profile)\r\n\t\t\r\n\t\t// props passed in as attributes\r\n\t\tconst {\r\n\t\t\tprofile = {}\r\n\t\t} = this.props\r\n\t\t\r\n\t\t// maintain the state of the profile view\r\n\t\tthis.state = {\r\n\t\t\r\n\t\t\t// profile: props.profile || DEFAULT_PROFILE || { isEmptyProfile: true, }\r\n\t\t\tprofile: profile || { isEmptyProfile: true },\r\n\r\n\t\t\t// ProfileForm\r\n\t\t\tiName: profile.name || \"\",\r\n\t\t\tiUsername: profile.username || \"\",\r\n\t\t\tiBio: profile.bio || \"\",\r\n\t\t\tiEmail: profile.email || \"\",\r\n\t\t}\r\n\t\t\r\n\t\t// ProfileForm\r\n\t\tthis.saveChanges = this.saveChanges.bind(this)\r\n\t\t\r\n\t\tthis.onProfileRefGet = this.onProfileRefGet.bind(this);\r\n\t\tthis.onProfileRefGetError = this.onProfileRefGetError.bind(this);\r\n\t\tthis.getProfile = this.loadProfile.bind(this);\r\n\r\n\t\t// get profile from firebase\r\n\t\tthis.loadProfile()\r\n\t\t\r\n\t}\r\n\r\n\tonProfileUpdated() {\r\n\t\talert(\"Your changes have been saved.\")\r\n\t}\r\n\r\n\t// ProfileForm\r\n\tsaveChanges() {\r\n\t\tconst FNID = `[ProfileForm#saveChanges]`\r\n\t\t// ALERT(`${FNID} SUCCESS \\n${result}`)\r\n\t\t// DBG(FNID, result)\r\n\r\n\t\tconst { name, bio } = this.state;\r\n\t\tALERT(`saving changes...\\nname: ${name}\\nbio: ${bio}`)\r\n\r\n\t\tconst user = firebase.auth().currentUser;\r\n\t\tconst { displayName, email, photoURL, emailVerified, uid } = user;\r\n\t\tuser.updateProfile({\r\n\t\t\tdisplayName: this.state.name,\r\n\t\t\t// photoURL: \"https://example.com/jane-q-user/profile.jpg\"\r\n\t\t}).then(function () {\r\n\t\t\t// Update successful.\r\n\t\t\tALERT(`${FNID} updated profile`)\r\n\t\t}).catch(function (error) {\r\n\t\t\t// An error happened.\r\n\t\t\tALERT(`${FNID} failed to update profile`)\r\n\t\t\tDBG(FNID, error)\r\n\t\t});\r\n\r\n\t\tconst db = firebase.firestore()\r\n\t\tconst usersRef = db.collection(\"/users\")\r\n\t\tconst profileRef = usersRef.doc(uid)\r\n\t\tconst newProfile = { \r\n\t\t\t// ...this.state.profile,\r\n\t\t\tname: this.state.iName,\r\n\t\t\tusername: this.state.iUsername,\r\n\t\t\tbio: this.state.iBio,\r\n\t\t\temail: this.state.iEmail,\r\n\t\t}\r\n\t\tDBG(newProfile)\r\n\t\tprofileRef.set(newProfile)\r\n\r\n\t\tthis.onProfileUpdated()\r\n\r\n\t}\r\n\t// end ProfileForm\r\n\r\n\tonProfileRefGet(doc) {\r\n\t\tconst thispv = this\r\n\t\tconst FNID = `[ProfileView#onProfileRefGet]`\r\n\t\tif (doc.exists) {\r\n\t\t\tconst profile = doc.data()\r\n\t\t\tthispv.setState({\r\n\t\t\t\t// name: firebase.auth().currentUser.displayName,\r\n\t\t\t\tprofile,\r\n\t\t\t\tiName: profile.name,\r\n\t\t\t\tiUsername: profile.username,\r\n\t\t\t\tiBio: profile.bio,\r\n\t\t\t\tiEmail: profile.email,\r\n\t\t\t})\r\n\t\t\tthis.forceUpdate()\r\n\t\t\tDBG(`${FNID} this.state.profile`, this.state.profile)\r\n\t\t\t// ALERT(`${FNID} doc exists`)\r\n\t\t} else {\r\n\t\t\tconsole.log(\"No such document 'doc.data()' defined!\")\r\n\t\t}\r\n\t}\r\n\r\n\tonProfileRefGetError(error) {\r\n\t\tconst FNID = `[ProfileView#onProfileRefGetError]`\r\n\t\tconsole.log(\"Error getting document:\", error);\r\n\t\tALERT(`${FNID} Error getting document: ${error}`)\r\n\t}\r\n\r\n\tloadProfile() {\r\n        if (!firebase.auth().currentUser) {\r\n            ALERT('NO CURUSER')\r\n            this.setState({ signedIn: false })\r\n            return\r\n        }\r\n        const DEFAULT_PROFILE = { isDefaultProfile: true, name: \"\", bio: \"\" }\r\n\t\tconst user = firebase.auth().currentUser\r\n        const { displayName, email, photoURL, emailVerified, uid } = user || {};\r\n        \r\n\t\t\r\n\t\t// const profileRef = firebase.firestore().collection(\"/users\").doc(firebase.auth().currentUser)\r\n\t\tconst db = firebase.firestore()\r\n\t\tconst usersRef = db.collection(\"/users\")\r\n\t\tconst profileRef = usersRef.doc(uid)\r\n\t\tprofileRef.get()\r\n\t\t\t.then(this.onProfileRefGet)\r\n\t\t\t.catch(this.onProfileRefGetError)\r\n\r\n\t\tDBG(`user: `, user)\r\n\t}\r\n\r\n\r\n\trender () {\r\n        const MProfileForm = ({...rest}) => <div {...rest} />\r\n        const MLabel = ({...rest}) => <label className=\"flex aifs\" {...rest} />\r\n        MLabel.Left = ({children}) => <span style={{width: '30%'}}>{children}</span>\r\n        const { profile, signedIn } = this.state\r\n\t\tconst profView = (\r\n\t\t\t<div className=\"ProfileView\">\r\n\t\t\t\t<div className=\"flex fdc\">\r\n\t\t\t\t\t<PageTitle />\r\n\t\t\t\t\t{/* <ProfileForm\r\n\t\t\t\t\t\tprofile={profile} /> */}\r\n\t\t\t\t\t\t<MProfileForm className=\"profile-form flex fww\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<MLabel>\r\n\t\t\t\t\t\t\t\t<MLabel.Left>Name</MLabel.Left>\r\n\t\t\t\t\t\t\t\t<input style={{width: '70%'}}\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Name\"\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.iName}\r\n\t\t\t\t\t\t\t\t\tonChange={(event) => this.setState({ iName: event.target.value })} />\r\n\t\t\t\t\t\t\t</MLabel>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<MLabel>\r\n\t\t\t\t\t\t\t\t<MLabel.Left>Username</MLabel.Left>\r\n\t\t\t\t\t\t\t\t<input style={{width: '70%'}}\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Username\"\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.iUsername}\r\n\t\t\t\t\t\t\t\t\tonChange={(event) => this.setState({ iUsername: event.target.value })} />\r\n\t\t\t\t\t\t\t</MLabel>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<MLabel>\r\n\t\t\t\t\t\t\t\t<MLabel.Left>Bio</MLabel.Left>\r\n\t\t\t\t\t\t\t\t<textarea style={{width: '70%'}}\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Insert bio here...\"\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.iBio}\r\n\t\t\t\t\t\t\t\t\tonChange={(event) => this.setState({ iBio: event.target.value })} />\r\n\t\t\t\t\t\t\t</MLabel>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t{/* <MLabel>\r\n\t\t\t\t\t\t\t\t<span style={{width: '30%'}}>Email</span>\r\n\t\t\t\t\t\t\t\t<input style={{width: '70%'}}\r\n\t\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Email address\"\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.iEmail}\r\n\t\t\t\t\t\t\t\t\tonChange={(event) => this.setState({ iEmail: event.target.value })} />\r\n\t\t\t\t\t\t\t</label> */}\r\n\t\t\t\t\t\t\t<div id=\"btns\" className=\"flex \">\r\n\t\t\t\t\t\t\t\t<input className=\"btn btn-primary flex-1\"\r\n\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\tonClick={(event) => { this.saveChanges() }}\r\n\t\t\t\t\t\t\t\t\tvalue=\"Save changes\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</MProfileForm>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n        )\r\n        \r\n        // return signedIn ? profView : <Redirect to='/sign-in' />\r\n        return profView\r\n\t}\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Redirect, Link } from 'react-router-dom'\r\nimport {AuthenticationManager} from '../controllers/AuthenticationManager'\r\nimport firebase from 'firebase'\r\nimport {ALERT, ERR, DBG} from '../utils'\r\nimport {\r\n    Button,\r\n    Form\r\n} from 'react-bootstrap'\r\n\r\nclass SignInForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            email: \"\",  // \"user1@gmail.com\",\r\n            password: \"\",  // \"user001\",\r\n            errorMessage: \"\",\r\n            gotSignedIn: false,\r\n        }\r\n        this.REDIRECT_URL = \"/profile\"\r\n        this.onSignInFail = this.onSignInFail.bind(this)\r\n        this.onSignInSuccess = this.onSignInSuccess.bind(this)\r\n        this.handleSignIn = this.handleSignIn.bind(this)\r\n    }\r\n\r\n    onSignInSuccess(result) {\r\n        const FNID = `[SignInForm#onSignInSuccess]`\r\n        // ALERT(`${FNID} Sign in successful!\\n\"${result}\"`)\r\n        ALERT(`${FNID} Sign in successful!`)\r\n        \r\n        const {\r\n            history,\r\n            successPath,\r\n        } = this.props\r\n\r\n        AuthenticationManager.setAuthState(AuthenticationManager.AuthState.SIGNEDIN)\r\n        \r\n        this.setState({ gotSignedIn: true })\r\n    }\r\n\r\n    onSignInFail(error) {\r\n        ALERT(`Failed to sign in :( ...`)\r\n        ERR('error', error)\r\n\r\n        this.setState({ errorMessage: `${error}` })\r\n    }\r\n\r\n    handleSignIn() {\r\n        \r\n        const {\r\n            email,\r\n            password\r\n        } = this.state\r\n        \r\n        ALERT(`Signing in...\\nemail: ${email}\\npassword: ${password}`)\r\n        \r\n        AuthenticationManager.signIn({\r\n            provider: AuthenticationManager.AuthProvider.EMAIL,\r\n            email, password,\r\n            onSuccess: this.onSignInSuccess,\r\n            onFail: this.onSignInFail,\r\n        })\r\n    }\t\r\n\r\n    render() {\r\n\r\n        const {\r\n            errorMessage,\r\n            gotSignedIn,\r\n        } = this.state\r\n\r\n        if (gotSignedIn === true)\r\n        {\r\n            return <Redirect to={this.REDIRECT_URL} />\r\n        }\r\n        \r\n        const hasError = (errorMessage !== \"\")\r\n        return (\r\n            <div className=\"AuthForm --sign-in\">\r\n                <div className={`msg-banner ${ hasError ? \"--error\" : \"--hidden\" }`}>\r\n                    {errorMessage}\r\n                </div>\r\n                <form className=\"flex fdc\">\r\n                    <input\r\n                        type=\"email\"\r\n                        placeholder=\"Email address\"\r\n                        value={this.state.email}\r\n                        onChange={(event) => this.setState({ email: event.target.value })} />\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        value={this.state.password}\r\n                        onChange={(event) => this.setState({ password: event.target.value })} />\r\n                    <div className=\"flex asfe pad-10\">\r\n                        <Link to=\"/sign-up\" className=\"btn btn-link\">Sign up</Link>\r\n                        <input className=\"btn btn-primary\"\r\n                            type=\"button\"\r\n                            value=\"Sign In\"\r\n                            onClick={() => this.handleSignIn()} />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nclass SignUpForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            fullName: \"\",  // \"User One\",\r\n            email: \"\",  // \"user1@gmail.com\",\r\n            password: \"\",  // \"user001\",\r\n            errorMessage: \"\",\r\n            gotSignedUp: false,\r\n        }\r\n        this.onSignUpSuccess = this.onSignUpSuccess.bind(this)\r\n        this.onSignUpFail = this.onSignUpFail.bind(this)\r\n    }\r\n    \r\n    onSignUpSuccess(result) {\r\n        const FNID = `[SignUpForm#onSignUpSuccess]`\r\n        ALERT(`${FNID} SUCCESS \\n${result}`)\r\n        DBG(FNID, result)\r\n        \r\n        DBG(FNID, firebase.auth().currentUser)\r\n\r\n        // set user's name and other details (firebase.updateProfile)\r\n        const user = firebase.auth().currentUser;\r\n        user.updateProfile({\r\n            displayName: this.state.fullName,\r\n            //photoURL: \"https://example.com/jane-q-user/profile.jpg\"\r\n        }).then(function () {\r\n            // Update successful.\r\n            ALERT(`${FNID} updated profile`)\r\n        }).catch(function (error) {\r\n            // An error happened.\r\n            ALERT(`${FNID} failed to update profile`)\r\n            DBG(FNID, error)\r\n        });\r\n\r\n        // add user to db\r\n        const db = firebase.firestore()\r\n        const usersRef = db.collection(\"users\")\r\n        usersRef.doc(result.user.uid).set({\r\n            isSetup: \"no?false:true\",\r\n            name: \"<no name>\",\r\n            bio: \"<no bio>\",\r\n        });\r\n\r\n\r\n        // this needs to happen last, it will re-render, and redirect the page\r\n        this.setState({ gotSignedUp: true })\r\n    }\r\n    onSignUpFail(error) {  // {code, message} = error\r\n        const FNID = `[SignUpForm#onSignUpFail]`\r\n        ALERT(`${FNID} FAILED \\n${error}`)\r\n        ERR(FNID, error)\r\n        this.setState({ errorMessage: `${error}` })\r\n    }\r\n\r\n    handleSignUp() {\r\n        const {\r\n            email,\r\n            password\r\n        } = this.state\r\n        ALERT(`Signing up...\\nemail: ${email}\\npassword: ${password}`)\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then(this.onSignUpSuccess)\r\n            .catch(this.onSignUpFail);\r\n\r\n    }\t\r\n\r\n    render() {\r\n        const {\r\n            errorMessage,\r\n            gotSignedUp,\r\n        } = this.state\r\n\r\n        if (gotSignedUp === true)\r\n        {\r\n            return <Redirect to=\"/sign-in\" />\r\n        }\r\n\r\n        const hasError = (errorMessage !== \"\")\r\n        const message = errorMessage\r\n        return (\r\n            <div className=\"auth-form --sign-up\">\r\n                <div className={`msg-banner ${ hasError ? \"--error\" : \"--hidden\" }`}>\r\n                    {message}\r\n                </div>\r\n                <Form>\r\n                    <Form.Group className='mb-0'>\r\n                        {/* <Form.Label>Full name</Form.Label> */}\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Full Name\"\r\n                            value={this.state.fullName}\r\n                            onChange={(event) => this.setState({ fullName: event.target.value })} />\r\n                    </Form.Group>\r\n                    <Form.Group className='mb-0'>\r\n                        {/* <Form.Label>Email address</Form.Label> */}\r\n                        <Form.Control\r\n                            type=\"email\"\r\n                            placeholder=\"Email address\"\r\n                            value={this.state.email}\r\n                            onChange={(event) => this.setState({ email: event.target.value })} />\r\n                    </Form.Group>\r\n                    <Form.Group className='mb-0'>\r\n                        {/* <Form.Label>Password</Form.Label> */}\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            value={this.state.password}\r\n                            onChange={(event) => this.setState({ password: event.target.value })} />\r\n                    </Form.Group>\r\n                    <div style={{ display: 'flex' }}>\r\n                        <Link to=\"/sign-in\" className=\"btn btn-link\" style={{flex:1}}>Sign in</Link>\r\n                        <Form.Control className=\"btn-primary\"\r\n                            type=\"submit\"\r\n                            value=\"Sign Up\"\r\n                            onClick={() => this.handleSignUp()} />\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst SignOutForm = (props) => (null)\r\n\r\n// TODO: use flexbox\r\nexport class AuthenticationView extends Component {\r\n\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n\r\n        let authForm = null;\r\n        let signedOut = false;\r\n        switch (this.props.authMode) {\r\n            case \"AuthMode.SIGNIN\":\r\n                authForm = <SignInForm />\r\n                break;\r\n            case \"AuthMode.SIGNUP\":\r\n                authForm = <SignUpForm />\r\n                break;\r\n            case \"AuthMode.SIGNOUT\":\r\n                authForm = <SignOutForm />\r\n                signedOut = true;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return (\r\n            // --tac --fwb --fg-white\r\n            <div className=\"flex fdc aic jcc --full-screen-absolute --bg-accent --fg-white\">\r\n                {!signedOut ? <h1 className=\"title\">Mentor Finder</h1> : null}\r\n                {authForm}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport function AuthenticationViewComponent({  }) {\r\n    return (\r\n        <div className=\"AuthenticationView\">\r\n            {/* {!signedOut ? <h1 className=\"title\">Mentor Finder</h1> : null}\r\n            {authForm} */}\r\n        </div>\r\n    )\r\n}","import React, { useState, createContext, useContext } from 'react'\r\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom'\r\n// import { AuthenticationManager } from './controllers'\r\nimport { HomeView, ExploreView, InboxView, ProfileView, AuthenticationView } from './views'\r\n// import { ALERT } from './utils'\r\nimport * as Octicons from '@styled-icons/octicons'\r\nimport styled from 'styled-components'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './styles/index.css'\r\n\r\nconst AppContext = createContext()\r\nconst AppProvider = () => {\r\n    const state = {\r\n        appName: 'MentorFinder'\r\n    }\r\n    return (\r\n        <AppContext.Provider value={state} />\r\n    )\r\n}\r\nconst useApp = () => useContext(AppContext)\r\n\r\nconst AppTabs = ({ tabs }) => (\r\n\t<nav className=\"AppTabs\">\r\n\t\t<ul>\r\n            {tabs.map(({href,icon:Icon},i) => {\r\n                return (\r\n                    <li key={i}>\r\n                        <Link to={href}>\r\n                            <Icon size={24} />\r\n                        </Link>\r\n                    </li>\r\n                )\r\n            })}\r\n\t\t</ul>\r\n\t</nav>\r\n)\r\n\r\nconst AppSwitch = () => (\r\n    <Switch>\r\n        <Route path=\"/explore\">\r\n            <ExploreView />\r\n        </Route>\r\n        <Route path=\"/inbox\">\r\n            <InboxView />\r\n        </Route>\r\n        <Route path=\"/profile\">\r\n            <ProfileView />\r\n        </Route>\r\n        <Route path=\"/sign-in\">\r\n            <AuthenticationView\r\n                authMode=\"AuthMode.SIGNIN\"\r\n                successPath={\"/profile\"} />\r\n        </Route>\r\n        <Route path=\"/sign-up\">\r\n            <AuthenticationView\r\n                authMode=\"AuthMode.SIGNUP\" />\r\n        </Route>\r\n        <Route path=\"/sign-out\">\r\n            <AuthenticationView\r\n                authMode=\"AuthMode.SIGNOUT\" />\r\n        </Route>\r\n        <Route path=\"/\">\r\n            <HomeView />\r\n            {/* {isSignedOut ? <Redirect to=\"/sign-in\" /> : <HomeView />} */}\r\n        </Route>\r\n    </Switch>\r\n)\r\nconst AppLayout = ({ children, ...rest }) => {\r\n    const tabs = [\r\n        { href:\"/\", icon: Octicons.Home },\r\n        { href:\"/explore\", icon: Octicons.Flame },\r\n        { href:\"/inbox\", icon: Octicons.Inbox },\r\n        { href:\"/profile\", icon: Octicons.Person },\r\n    ]\r\n    const AppHeader = ({ children }) => (\r\n        <header className=\"AppHeader\">\r\n            {children}\r\n        </header>\r\n    )\r\n    const AppMain = ({ children }) => (\r\n        <main className=\"AppMain\">\r\n            {children}\r\n        </main>\r\n    )\r\n    return (\r\n        <div className=\"App\">\r\n            <AppHeader>\r\n                <h1>Mentor Finder</h1>\r\n            </AppHeader>\r\n            <AppMain>\r\n                {children}\r\n                <AppSwitch />\r\n            </AppMain>\r\n            <AppTabs tabs={tabs} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default function App() {\r\n    let basename;\r\n    // basename = \"\"\r\n    // basename = \"/mentor-app/app.html\"\r\n    basename = \"/dist/app.html\"\r\n    return (\r\n        <>\r\n            <BrowserRouter basename={basename}>\r\n                <AppLayout>\r\n                    {/* Current tab (main view) */}\r\n                </AppLayout>\r\n            </BrowserRouter>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './styles/index.css'\r\nimport App from './App'\r\nimport {initializeApp} from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n\tapiKey: \"AIzaSyCmE6rP0Vsuherr46YH8-OQ_SoRXyp6_gg\",\r\n\tauthDomain: \"mentor-finder-app.firebaseapp.com\",\r\n\tdatabaseURL: \"https://mentor-finder-app.firebaseio.com\",\r\n\tprojectId: \"mentor-finder-app\",\r\n\tstorageBucket: \"mentor-finder-app.appspot.com\",\r\n\tmessagingSenderId: \"223437150523\",\r\n\tappId: \"1:223437150523:web:3885fb7f8739c0d1a23f1e\",\r\n\tmeasurementId: \"G-KL1Q7SGE9T\"\r\n}\r\ninitializeApp(firebaseConfig)\r\n\r\nrender(<App />, document.getElementById('root'))"],"sourceRoot":""}